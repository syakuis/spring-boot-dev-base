buildscript {
  ext {
    springBootVersion = "2.0.5.RELEASE"
    lombokVersion = "1.18.2"
    restDocsVersion = "2.0.2.RELEASE"
  }

  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
  }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"

group "org.syaku"
version "1.0.0.BUILD-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
  module {
    inheritOutputDirs = true
    outputDir = compileJava.destinationDir
    testOutputDir = compileTestJava.destinationDir
  }
}

bootJar {
  mainClassName = "org.syaku.Application"
}

repositories {
  jcenter()
  mavenCentral()
}

ext {
  snippetsDir = file("build/generated-snippets")
}

dependencies {
  implementation "org.springframework.boot:spring-boot-starter-web"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  compileOnly "org.springframework.boot:spring-boot-configuration-processor"

  testCompile "junit:junit:4.12"
  testCompile "org.jmock:jmock-junit4:2.8.2"
  testCompile "org.mockito:mockito-core:2.+"

  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  compile "org.springframework.boot:spring-boot-starter-data-jpa"
  compile "com.h2database:h2"

  compile "org.springframework.boot:spring-boot-starter-security"
  testCompile "org.springframework.security:spring-security-test"

  asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${restDocsVersion}"
  testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:${restDocsVersion}"
}

compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) {
  gradleVersion = "4.10.2"
}

test {
  outputs.dir snippetsDir
}

asciidoctor {
  inputs.dir snippetsDir
  dependsOn test
}

bootJar {
  dependsOn asciidoctor
  from ("${asciidoctor.outputDir}/html5") {
    into 'static/docs'
  }
}
